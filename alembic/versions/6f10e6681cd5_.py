"""

Revision ID: 6f10e6681cd5
Revises: 
Create Date: 2024-07-21 10:22:48.892488

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils


# revision identifiers, used by Alembic.
revision: str = '6f10e6681cd5'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('generos',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('title', sa.String(length=256), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('permissao',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('title', sa.String(length=256), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('permissao_laboratorio',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('id_user', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('id_lab', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('perm_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.ForeignKeyConstraint(['perm_id'], ['permissao.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('usuario',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('primeiro_nome', sa.String(length=256), nullable=False),
    sa.Column('image', sa.Text(), nullable=True),
    sa.Column('segundo_nome', sa.String(length=256), nullable=False),
    sa.Column('primeiro_acesso', sa.Boolean(), nullable=False),
    sa.Column('ativo', sa.Boolean(create_constraint=True), nullable=False),
    sa.Column('matricula', sa.BigInteger(), nullable=False),
    sa.Column('email', sa.String(length=256), nullable=False),
    sa.Column('tel', sa.BigInteger(), nullable=True),
    sa.Column('senha', sa.String(length=256), nullable=False),
    sa.Column('genero', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('data_inicial', sa.String(length=256), nullable=False),
    sa.Column('data_nascimento', sa.String(length=256), nullable=False),
    sa.Column('data_atualizacao', sa.String(length=256), nullable=False),
    sa.ForeignKeyConstraint(['genero'], ['generos.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('matricula')
    )
    op.create_index(op.f('ix_usuario_email'), 'usuario', ['email'], unique=True)
    op.create_table('laboratorios',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('coordenador_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('nome', sa.String(length=256), nullable=False),
    sa.Column('sobre', sa.String(length=5000), nullable=False),
    sa.Column('descricao', sa.String(length=256), nullable=True),
    sa.Column('email', sa.String(length=256), nullable=True),
    sa.Column('data_inicial', sa.String(length=256), nullable=False),
    sa.Column('data_up', sa.String(length=256), nullable=False),
    sa.Column('template', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['coordenador_id'], ['usuario.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('pendings',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('id_user', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('ativo', sa.Boolean(create_constraint=True), nullable=False),
    sa.Column('data_create', sa.String(length=256), nullable=False),
    sa.Column('data_atualizacao', sa.String(length=256), nullable=False),
    sa.Column('matricula_user', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['id_user'], ['usuario.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('matricula_user')
    )
    op.create_table('usuario_permissao',
    sa.Column('usuario_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=True),
    sa.Column('permissao_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=True),
    sa.ForeignKeyConstraint(['permissao_id'], ['permissao.id'], ),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuario.id'], )
    )
    op.create_table('laboratorio_permissao',
    sa.Column('laboratorio_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=True),
    sa.Column('permissao_laboratorio_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=True),
    sa.ForeignKeyConstraint(['laboratorio_id'], ['laboratorios.id'], ),
    sa.ForeignKeyConstraint(['permissao_laboratorio_id'], ['permissao_laboratorio.id'], )
    )
    op.create_table('projetos',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('titulo', sa.String(length=256), nullable=False),
    sa.Column('descricao', sa.String(length=5000), nullable=True),
    sa.Column('lab_creator', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('autor_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('data_inicial', sa.String(length=256), nullable=False),
    sa.Column('data_up', sa.String(length=256), nullable=False),
    sa.ForeignKeyConstraint(['autor_id'], ['usuario.id'], ),
    sa.ForeignKeyConstraint(['lab_creator'], ['laboratorios.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('titulo')
    )
    op.create_table('usuario_laboratorio',
    sa.Column('usuario_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=True),
    sa.Column('laboratorio_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=True),
    sa.ForeignKeyConstraint(['laboratorio_id'], ['laboratorios.id'], ),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuario.id'], )
    )
    op.create_table('laboratorio_projeto',
    sa.Column('laboratorio_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=True),
    sa.Column('projeto_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=True),
    sa.ForeignKeyConstraint(['laboratorio_id'], ['laboratorios.id'], ),
    sa.ForeignKeyConstraint(['projeto_id'], ['projetos.id'], )
    )
    op.create_table('usuario_projeto',
    sa.Column('usuario_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=True),
    sa.Column('projeto_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=True),
    sa.ForeignKeyConstraint(['projeto_id'], ['projetos.id'], ),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuario.id'], )
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('usuario_projeto')
    op.drop_table('laboratorio_projeto')
    op.drop_table('usuario_laboratorio')
    op.drop_table('projetos')
    op.drop_table('laboratorio_permissao')
    op.drop_table('usuario_permissao')
    op.drop_table('pendings')
    op.drop_table('laboratorios')
    op.drop_index(op.f('ix_usuario_email'), table_name='usuario')
    op.drop_table('usuario')
    op.drop_table('permissao_laboratorio')
    op.drop_table('permissao')
    op.drop_table('generos')
    # ### end Alembic commands ###
